# Production Docker Compose
version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: weather-mongodb-prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-your_secure_password}
      MONGO_INITDB_DATABASE: weather_db
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ./logs/mongodb:/var/log/mongodb
    networks:
      - weather-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/weather_db --quiet
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: weather-backend-prod
    restart: always
    environment:
      - MONGO_URL=mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-your_secure_password}@mongodb:27017/weather_db?authSource=admin
      - PORT=8001
      - DEBUG=false
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - weather-network
    volumes:
      - ./logs/backend:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Frontend with SSL
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: weather-frontend-prod
    restart: always
    environment:
      - REACT_APP_BACKEND_URL=https://your-domain.com/api
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - weather-network
    volumes:
      - ./docker/ssl:/etc/nginx/ssl:ro
      - ./docker/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - ./logs/nginx:/var/log/nginx
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Reverse Proxy (Nginx)
  nginx:
    image: nginx:alpine
    container_name: weather-nginx-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.prod.conf:/etc/nginx/conf.d/default.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - weather-network

volumes:
  mongodb_data:
    driver: local

networks:
  weather-network:
    driver: bridge